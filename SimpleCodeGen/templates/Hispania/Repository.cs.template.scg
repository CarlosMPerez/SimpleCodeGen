// ------------------------------------------------------------------------------
//  <autogenerated>
//	Code generated by SimpleCodeGen.
//	Date: <%GenDate:dd/MM/yyyy%>    
//	GSCodeGen version: 0.1
// 
//	Modifying this file could lead to errors.
//	Any functionality modification should be done upon a related partial class 
//	stored in a different file.
//  </autogenerado>
// ------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Microsoft.Xrm.Client.Services;

namespace Hispania.Dynamics.DAL
{
    /// <summary>
    /// Concrete implementation of BaseRepository to deal with <%ClassName%> POCOs and mappers
    /// </summary>
    internal class <%ClassName%>Repository : BaseRepository<<%ClassName%>Mapper, <%ClassName%>, IRepository<<%ClassName%>>
    {
	    /// <summary>
	    /// Ctor
	    /// </summary>
	    internal <%ClassName%>Repository(OrganizationService orgService) : base(orgService)
	    {
	    }


        /// <summary>
        /// Gets all ACTIVE records of the <%ClassName%> entity specified
        /// </summary>
        /// <returns>List of all ACTIVE <%ClassName%>s as POCOs</returns>
        public new List<<%ClassName%>> GetAll()
        {
            return base.GetAll();
        }

        /// <summary>
        /// Gets a <%ClassName%> by its unique id
        /// </summary>
        /// <param name="id">the unique id of the <%ClassName%> to be retrieved</param>
        /// <returns>A <%ClassName%> POCO</returns>
        public new <%ClassName%> GetById(Guid id)
        {
            return base.GetById(id);
        }

        /// <summary>
        /// Inserts the <%ClassName%>'s values provided into a new database record
        /// </summary>
        /// <param name="entity">the <%ClassName%> POCO containing the values for the new record</param>
        /// <returns>the unique id of the newly created record</returns>
        public Guid Create(<%ClassName%> entity)
        {
            throw new NotImplementedException();
        }

        /// <summary>
        /// Deletes the database record represented by the <%ClassName%> POCO 
        /// </summary>
        /// <param name="entity">The <%ClassName%> POCO</param>
        public void Delete(<%ClassName%> entity)
        {
            throw new NotImplementedException();
        }

        /// <summary>
        /// Updates the database record with the values specified in the <%ClassName%> POCO
        /// </summary>
        /// <param name="entity">The <%ClassName%> POCO with the updated values</param>
        public void Update(<%ClassName%> entity)
        {
            throw new NotImplementedException();
        }
    }
}